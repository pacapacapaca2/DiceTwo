// ui.js - –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
// –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –∏—Å–ø—ã—Ç–∞–Ω–∏–π –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

// –°–æ–∑–¥–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –∏—Å–ø—ã—Ç–∞–Ω–∏—è
function createChallengeElement(challenge, streakDays) {
  const challengeContainer = document.createElement('div');
  challengeContainer.className = 'challenge-container';
  
  // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏—Å–ø—ã—Ç–∞–Ω–∏—è
  const challengeHeader = document.createElement('div');
  challengeHeader.className = 'challenge-header';
  challengeHeader.innerHTML = `
    <h3>–ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –∏—Å–ø—ã—Ç–∞–Ω–∏–µ</h3>
    <div class="streak-indicator">
      <i class="streak-icon">üî•</i>
      <span>${streakDays} ${getDayForm(streakDays)}</span>
    </div>
  `;
  challengeContainer.appendChild(challengeHeader);
  
  // –û–ø–∏—Å–∞–Ω–∏–µ –∏—Å–ø—ã—Ç–∞–Ω–∏—è
  const challengeDescription = document.createElement('div');
  challengeDescription.className = 'challenge-description';
  challengeDescription.textContent = challenge.description;
  challengeContainer.appendChild(challengeDescription);
  
  // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞–≥—Ä–∞–¥–µ
  const rewardInfo = document.createElement('div');
  rewardInfo.className = 'reward-info';
  
  // –†–∞—Å—á–µ—Ç –±–æ–Ω—É—Å–∞ –∑–∞ —Å–µ—Ä–∏—é
  let bonusAmount = 0;
  if (streakDays >= 3) {
    if (streakDays >= 30) {
      bonusAmount = challenge.baseReward * 2; // 200%
    } else if (streakDays >= 14) {
      bonusAmount = challenge.baseReward; // 100%
    } else if (streakDays >= 7) {
      bonusAmount = Math.floor(challenge.baseReward * 0.5); // 50%
    } else {
      bonusAmount = Math.floor(challenge.baseReward * 0.2); // 20%
    }
  }
  
  const totalReward = challenge.baseReward + bonusAmount;
  
  rewardInfo.innerHTML = `
    <div class="reward-base">
      <span>–ë–∞–∑–æ–≤–∞—è –Ω–∞–≥—Ä–∞–¥–∞:</span>
      <span class="reward-amount">${challenge.baseReward} üíé</span>
    </div>
    ${bonusAmount > 0 ? `
      <div class="reward-bonus">
        <span>–ë–æ–Ω—É—Å –∑–∞ —Å–µ—Ä–∏—é ${streakDays} ${getDayForm(streakDays)}:</span>
        <span class="reward-amount">+${bonusAmount} üíé</span>
      </div>
    ` : ''}
    <div class="reward-total">
      <span>–ò—Ç–æ–≥–æ:</span>
      <span class="reward-amount">${totalReward} üíé</span>
    </div>
  `;
  challengeContainer.appendChild(rewardInfo);
  
  // –°—Ç–∞—Ç—É—Å –∏—Å–ø—ã—Ç–∞–Ω–∏—è
  const challengeStatus = document.createElement('div');
  challengeStatus.className = 'challenge-status';
  challengeStatus.innerHTML = challenge.completed
    ? '<div class="status-complete">‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ</div>'
    : '<div class="status-incomplete">‚è≥ –û–∂–∏–¥–∞–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è</div>';
  challengeContainer.appendChild(challengeStatus);
  
  return challengeContainer;
}

// –°–æ–∑–¥–∞–µ—Ç –ø–∞–Ω–µ–ª—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø—Ä–æ—Ñ–∏–ª–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function createProfilePanel(profile) {
  const profilePanel = document.createElement('div');
  profilePanel.className = 'profile-panel';
  
  profilePanel.innerHTML = `
    <div class="profile-stats">
      <div class="stat-item">
        <i class="stat-icon">üíé</i>
        <div class="stat-value">${profile.luckPoints}</div>
        <div class="stat-label">–û—á–∫–∏ —É–¥–∞—á–∏</div>
      </div>
      <div class="stat-item">
        <i class="stat-icon">üé≤</i>
        <div class="stat-value">${profile.totalRolls}</div>
        <div class="stat-label">–í—Å–µ–≥–æ –±—Ä–æ—Å–∫–æ–≤</div>
      </div>
      <div class="stat-item">
        <i class="stat-icon">üî•</i>
        <div class="stat-value">${profile.streakDays}</div>
        <div class="stat-label">–î–Ω–µ–π –ø–æ–¥—Ä—è–¥</div>
      </div>
      <div class="stat-item">
        <i class="stat-icon">üèÜ</i>
        <div class="stat-value">${profile.challengesCompleted.length}</div>
        <div class="stat-label">–ò—Å–ø—ã—Ç–∞–Ω–∏–π –ø—Ä–æ–π–¥–µ–Ω–æ</div>
      </div>
    </div>
  `;
  
  return profilePanel;
}

// –°–æ–∑–¥–∞–µ—Ç –ø–∞–Ω–µ–ª—å –º–∞–≥–∞–∑–∏–Ω–∞ —Å –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏
function createShopPanel(shopItems) {
  const shopPanel = document.createElement('div');
  shopPanel.className = 'shop-panel';
  
  const shopHeader = document.createElement('div');
  shopHeader.className = 'shop-header';
  shopHeader.innerHTML = '<h3>–ú–∞–≥–∞–∑–∏–Ω</h3>';
  shopPanel.appendChild(shopHeader);
  
  const itemsGrid = document.createElement('div');
  itemsGrid.className = 'items-grid';
  
  // –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã –ø–æ —Ç–∏–ø—É
  const itemsByType = shopItems.reduce((acc, item) => {
    acc[item.type] = acc[item.type] || [];
    acc[item.type].push(item);
    return acc;
  }, {});
  
  // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
  const typeLabels = {
    dice_style: '–°—Ç–∏–ª–∏ –∫—É–±–∏–∫–æ–≤',
    background: '–§–æ–Ω—ã',
    effect: '–≠—Ñ—Ñ–µ–∫—Ç—ã'
  };
  
  Object.keys(itemsByType).forEach(type => {
    const categoryLabel = document.createElement('div');
    categoryLabel.className = 'category-label';
    categoryLabel.textContent = typeLabels[type] || type;
    itemsGrid.appendChild(categoryLabel);
    
    const items = itemsByType[type];
    items.forEach(item => {
      const itemElement = document.createElement('div');
      itemElement.className = 'shop-item';
      if (item.isUnlocked) {
        itemElement.classList.add('unlocked');
      }
      
      itemElement.innerHTML = `
        <div class="item-icon">${getItemIcon(item.type)}</div>
        <div class="item-info">
          <div class="item-name">${item.name}</div>
          <div class="item-description">${item.description}</div>
        </div>
        <div class="item-cost">
          ${item.isUnlocked
            ? '<span class="unlocked-label">‚úÖ –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ</span>'
            : `<span class="cost-label">${item.cost} üíé</span>
               <button class="buy-button" data-id="${item.id}" ${!item.canPurchase ? 'disabled' : ''}>
                 ${item.canPurchase ? '–ö—É–ø–∏—Ç—å' : '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ—á–∫–æ–≤'}
               </button>`
          }
        </div>
      `;
      
      itemsGrid.appendChild(itemElement);
    });
  });
  
  shopPanel.appendChild(itemsGrid);
  
  return shopPanel;
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ñ–æ—Ä–º—ã —Å–ª–æ–≤–∞ "–¥–µ–Ω—å"
function getDayForm(days) {
  if (days % 10 === 1 && days % 100 !== 11) {
    return '–¥–µ–Ω—å';
  } else if ([2, 3, 4].includes(days % 10) && ![12, 13, 14].includes(days % 100)) {
    return '–¥–Ω—è';
  } else {
    return '–¥–Ω–µ–π';
  }
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–∫–æ–Ω–∫–∏ –ø—Ä–µ–¥–º–µ—Ç–∞
function getItemIcon(type) {
  switch (type) {
    case 'dice_style':
      return 'üé≤';
    case 'background':
      return 'üñºÔ∏è';
    case 'effect':
      return '‚ú®';
    default:
      return 'üéÅ';
  }
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
function showNotification(message, type = 'info') {
  const notification = document.createElement('div');
  notification.className = `notification notification-${type}`;
  notification.textContent = message;
  
  document.body.appendChild(notification);
  
  // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
  setTimeout(() => {
    notification.classList.add('show');
  }, 10);
  
  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
  setTimeout(() => {
    notification.classList.remove('show');
    setTimeout(() => {
      notification.remove();
    }, 300);
  }, 3000);
  
  return notification;
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å –Ω–∞–≥—Ä–∞–¥–æ–π
function showRewardModal(reward, onClose) {
  const modalOverlay = document.createElement('div');
  modalOverlay.className = 'modal-overlay';
  
  const modalContent = document.createElement('div');
  modalContent.className = 'modal-content reward-modal';
  
  modalContent.innerHTML = `
    <div class="reward-animation">üéâ</div>
    <h2>–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!</h2>
    <p>–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–∏–ª–∏ –∏—Å–ø—ã—Ç–∞–Ω–∏–µ –∏ –ø–æ–ª—É—á–∞–µ—Ç–µ:</p>
    <div class="reward-amount-large">${reward} üíé</div>
    <button class="close-modal-button">–ó–∞–±—Ä–∞—Ç—å –Ω–∞–≥—Ä–∞–¥—É</button>
  `;
  
  modalOverlay.appendChild(modalContent);
  document.body.appendChild(modalOverlay);
  
  // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
  setTimeout(() => {
    modalOverlay.classList.add('show');
  }, 10);
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è
  const closeButton = modalContent.querySelector('.close-modal-button');
  closeButton.addEventListener('click', () => {
    modalOverlay.classList.remove('show');
    setTimeout(() => {
      modalOverlay.remove();
      if (typeof onClose === 'function') {
        onClose();
      }
    }, 300);
  });
  
  return modalOverlay;
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
export {
  createChallengeElement,
  createProfilePanel,
  createShopPanel,
  showNotification,
  showRewardModal
}; 