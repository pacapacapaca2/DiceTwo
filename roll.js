document.addEventListener("DOMContentLoaded", () => {
  // –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã DOM
  const rollButton = document.getElementById("roll-button");
  const resultDiv = document.getElementById("result");
  const diceContainer = document.getElementById("dice-container");
  const dice1 = document.getElementById("dice1");
  const dice2 = document.getElementById("dice2");
  const animationContainer = document.getElementById("animation-container");
  const loader = document.querySelector('.loader');
  const progressFill = document.querySelector('.progress-fill');
  const progressValue = document.querySelector('.progress-value');
  const statValues = document.querySelectorAll('.stat-value');

  // –°–∫—Ä—ã–≤–∞–µ–º –ª–æ–∞–¥–µ—Ä –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  if (loader) {
    loader.style.display = 'none';
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
  if (!rollButton || !resultDiv || !diceContainer || !dice1 || !dice2) {
    console.error("One or more DOM elements not found.");
    return;
  }

  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã
  const gameState = {
    rollCount: 24,
    bestScore: 12,
    stars: 32,
    level: 3,
    xp: 60, // –ø—Ä–æ—Ü–µ–Ω—Ç –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è
    bonusRolls: 0, // –±–æ–Ω—É—Å–Ω—ã–µ –±—Ä–æ—Å–∫–∏
    todayRolls: 0, // —Å–∫–æ–ª—å–∫–æ –±—Ä–æ—Å–∫–æ–≤ —Å–¥–µ–ª–∞–Ω–æ —Å–µ–≥–æ–¥–Ω—è
    maxDailyRolls: 999, // –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—Ä–æ—Å–∫–æ–≤ (—É–±–∏—Ä–∞–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ)
    history: [], // –∏—Å—Ç–æ—Ä–∏—è –±—Ä–æ—Å–∫–æ–≤
    
    // –ù–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–∂–∏–º–∞ –∏—Å—Ç–æ—Ä–∏–∏
    currentLocation: "–¢—É–º–∞–Ω–Ω—ã–µ —Ä–∞–≤–Ω–∏–Ω—ã",
    currentNode: 2, // 0-–∏–Ω–¥–µ–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–∫—É—â–µ–≥–æ —É–∑–ª–∞ –Ω–∞ –∫–∞—Ä—Ç–µ
    storyProgress: {
      "–¢—É–º–∞–Ω–Ω—ã–µ —Ä–∞–≤–Ω–∏–Ω—ã": [
        { completed: true, name: "–î–µ—Ä–µ–≤–Ω—è", type: "normal" },
        { completed: true, name: "–õ–µ—Å", type: "normal" },
        { completed: false, name: "–ü–µ—â–µ—Ä–∞", type: "normal" },
        { completed: false, name: "–†—É–∏–Ω—ã", type: "normal" },
        { completed: false, name: "–î—Ä–µ–≤–Ω–∏–π –¥—Ä–∞–∫–æ–Ω", type: "boss" }
      ]
    },
    currentMission: {
      title: "–ó–∞–≥–∞–¥–∫–∞ –ø–µ—â–µ—Ä—ã",
      description: "–ò—Å—Å–ª–µ–¥—É–π —Ç–µ–º–Ω—É—é –ø–µ—â–µ—Ä—É –∏ –Ω–∞–π–¥–∏ –¥—Ä–µ–≤–Ω–∏–π –∞—Ä—Ç–µ—Ñ–∞–∫—Ç. –ë—Ä–æ—Å–∞–π –∫—É–±–∏–∫–∏, —á—Ç–æ–±—ã –ø—Ä–µ–æ–¥–æ–ª–µ—Ç—å –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è!",
      difficulty: 2, // –æ—Ç 1 –¥–æ 3
      targetRolls: 3, // –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Å–ø–µ—à–Ω—ã—Ö –±—Ä–æ—Å–∫–æ–≤ –¥–ª—è –ø–æ–±–µ–¥—ã
      successfulRolls: 0, // —Ç–µ–∫—É—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å
      requiredValue: 7, // –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —Ç—Ä–µ–±—É–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è —É—Å–ø–µ—à–Ω–æ–≥–æ –±—Ä–æ—Å–∫–∞
      rewards: {
        xp: 25,
        stars: 15,
        crystals: 3,
        artifact: "–ê–º—É–ª–µ—Ç —Å–∏–ª—ã"
      }
    },
    artifacts: [
      { id: "sword", name: "–î—Ä–µ–≤–Ω–∏–π –º–µ—á", icon: "üó°Ô∏è", collected: true },
      { id: "shield", name: "–©–∏—Ç –≥–µ—Ä–æ—è", icon: "üõ°Ô∏è", collected: true },
      { id: "scroll", name: "–°–≤–∏—Ç–æ–∫ –º—É–¥—Ä–æ—Å—Ç–∏", icon: "üìú", collected: true },
      { id: "amulet", name: "–ê–º—É–ª–µ—Ç —Å–∏–ª—ã", icon: "üîÆ", collected: false },
      { id: "potion", name: "–ó–µ–ª—å–µ –∏—Å—Ü–µ–ª–µ–Ω–∏—è", icon: "üß™", collected: false },
      { id: "key", name: "–ö–ª—é—á –æ—Ç —Å–æ–∫—Ä–æ–≤–∏—â–Ω–∏—Ü—ã", icon: "üîë", collected: false },
      { id: "crown", name: "–ö–æ—Ä–æ–Ω–∞ –≤–ª–∞—Å—Ç–∏", icon: "üëë", collected: false },
      { id: "gem", name: "–ö–∞–º–µ–Ω—å –¥—É—à", icon: "üíé", collected: false },
      { id: "book", name: "–ö–Ω–∏–≥–∞ –∑–∞–∫–ª–∏–Ω–∞–Ω–∏–π", icon: "üìï", collected: false },
      { id: "staff", name: "–ü–æ—Å–æ—Ö –º–∞–≥–∞", icon: "ü™Ñ", collected: false },
      { id: "ring", name: "–ö–æ–ª—å—Ü–æ –Ω–µ–≤–∏–¥–∏–º–æ—Å—Ç–∏", icon: "üíç", collected: false },
      { id: "orb", name: "–°—Ñ–µ—Ä–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤", icon: "üî¥", collected: false }
    ]
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏ –æ—á–∫–æ–≤
  function createPointsAnimation(points) {
    const pointsEl = document.createElement("div");
    pointsEl.className = "points-animation";
    pointsEl.textContent = points > 0 ? `+${points}` : points;
    
    // –°–ª—É—á–∞–π–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
    const x = Math.random() * 80 + 10; // –æ—Ç 10% –¥–æ 90% —à–∏—Ä–∏–Ω—ã
    const y = Math.random() * 30 + 35; // –æ—Ç 35% –¥–æ 65% –≤—ã—Å–æ—Ç—ã
    
    pointsEl.style.left = `${x}%`;
    pointsEl.style.top = `${y}%`;
    
    animationContainer.appendChild(pointsEl);
    
    // –£–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
    setTimeout(() => {
      pointsEl.remove();
    }, 1500);
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
  function updateUI() {
    // –û–±–Ω–æ–≤–ª—è–µ–º —É—Ä–æ–≤–µ–Ω—å –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å
    if (progressValue) progressValue.textContent = gameState.level;
    if (progressFill) progressFill.style.width = `${gameState.xp}%`;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    if (statValues && statValues.length >= 3) {
      statValues[0].textContent = gameState.rollCount;
      statValues[1].textContent = gameState.bestScore;
      statValues[2].textContent = `‚òÖ ${gameState.stars}`;
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –±—Ä–æ—Å–∫–∞
    if (gameState.currentMission.successfulRolls < gameState.currentMission.targetRolls) {
      const remainingRolls = gameState.currentMission.targetRolls - gameState.currentMission.successfulRolls;
      rollButton.textContent = `–ë—Ä–æ—Å–∏—Ç—å –∫—É–±–∏–∫–∏ (${remainingRolls})`;
    } else {
      rollButton.textContent = "–ó–∞–≤–µ—Ä—à–∏—Ç—å –º–∏—Å—Å–∏—é";
    }
    
    rollButton.disabled = false;
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –±—Ä–æ—Å–∫–∞ –∏ –Ω–∞—á–∏—Å–ª–µ–Ω–∏—è –æ—á–∫–æ–≤
  function evaluateRoll(roll1, roll2) {
    const total = roll1 + roll2;
    let points = total;
    let message = `–í—ã–ø–∞–ª–æ: ${total}`;
    let missionSuccess = false;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—Ö –º–∏—Å—Å–∏–∏
    if (total >= gameState.currentMission.requiredValue) {
      missionSuccess = true;
      gameState.currentMission.successfulRolls++;
      message += ` (—É—Å–ø–µ—Ö! ‚úÖ)`;
    } else {
      message += ` (–Ω–µ—É–¥–∞—á–∞ ‚ùå)`;
    }
    
    // –î–≤–æ–π–Ω—ã–µ —á–∏—Å–ª–∞ –¥–∞—é—Ç –±–æ–Ω—É—Å
    if (roll1 === roll2) {
      points = total * 2;
      message += ` (–¥—É–±–ª—å! x2)`;
      createPointsAnimation(points);
    } else {
      createPointsAnimation(points);
    }
    
    // –û—Å–æ–±—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏
    if (total === 7) {
      points += 3;
      message += " (+3 –∑–∞ —Å—á–∞—Å—Ç–ª–∏–≤–æ–µ —á–∏—Å–ª–æ)";
    } else if (total === 11) {
      points += 5;
      message += " (+5 –∑–∞ –º–æ—â–Ω—ã–π –±—Ä–æ—Å–æ–∫)";
    } else if (total === 12) {
      points += 7;
      message += " (+7 –∑–∞ –º–∞–∫—Å–∏–º—É–º)";
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    gameState.todayRolls++;
    gameState.rollCount++;
    gameState.stars += points;
    
    if (total > gameState.bestScore) {
      gameState.bestScore = total;
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º XP
    gameState.xp += points * 2;
    if (gameState.xp >= 100) {
      gameState.level++;
      gameState.xp = gameState.xp - 100;
      message += " (–Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å!)";
    }
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
    gameState.history.push({
      roll1: roll1,
      roll2: roll2,
      total: total,
      points: points,
      timestamp: new Date(),
      missionSuccess: missionSuccess
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –º–∏—Å—Å–∏–∏
    if (gameState.currentMission.successfulRolls >= gameState.currentMission.targetRolls) {
      message += " (–º–∏—Å—Å–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!)";
      rollButton.textContent = "–ó–∞–≤–µ—Ä—à–∏—Ç—å –º–∏—Å—Å–∏—é";
    }
    
    return { points, message, missionSuccess };
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –º–∏—Å—Å–∏–∏ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–≥—Ä–∞–¥
  function completeMission() {
    // –û—Ç–º–µ—á–∞–µ–º —É–∑–µ–ª –∫–∞—Ä—Ç—ã –∫–∞–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–π
    const currentLocation = gameState.currentLocation;
    const currentNodeIndex = gameState.currentNode;
    
    if (gameState.storyProgress[currentLocation] && 
        gameState.storyProgress[currentLocation][currentNodeIndex]) {
      gameState.storyProgress[currentLocation][currentNodeIndex].completed = true;
    }
    
    // –í—ã–¥–∞–µ–º –Ω–∞–≥—Ä–∞–¥—ã
    const rewards = gameState.currentMission.rewards;
    gameState.xp += rewards.xp;
    gameState.stars += rewards.stars;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –Ω–æ–≤—ã–π —É—Ä–æ–≤–µ–Ω—å
    if (gameState.xp >= 100) {
      gameState.level++;
      gameState.xp = gameState.xp - 100;
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∞—Ä—Ç–µ—Ñ–∞–∫—Ç –≤ –∫–æ–ª–ª–µ–∫—Ü–∏—é
    const artifactToAdd = rewards.artifact;
    if (artifactToAdd) {
      const artifactIndex = gameState.artifacts.findIndex(a => a.name === artifactToAdd);
      if (artifactIndex !== -1) {
        gameState.artifacts[artifactIndex].collected = true;
      }
    }
    
    // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    resultDiv.textContent = `–ú–∏—Å—Å–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞! –ü–æ–ª—É—á–µ–Ω–æ: ${rewards.xp} XP, ${rewards.stars} –∑–≤–µ–∑–¥, ${rewards.crystals} –∫—Ä–∏—Å—Ç–∞–ª–ª–æ–≤, ${rewards.artifact}`;
    resultDiv.style.display = "block";
    
    // –†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π —É–∑–µ–ª
    if (currentNodeIndex < gameState.storyProgress[currentLocation].length - 1) {
      gameState.currentNode++;
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –º–∏—Å—Å–∏—é (–≠—Ç–æ —É–ø—Ä–æ—â–µ–Ω–Ω–æ, –≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –Ω—É–∂–Ω–æ –∑–∞–≥—Ä—É–∂–∞—Ç—å –∏–∑ –±–∞–∑—ã)
      if (gameState.currentNode === gameState.storyProgress[currentLocation].length - 1) {
        // –ë–æ—Å—Å
        gameState.currentMission = {
          title: "–î—Ä–µ–≤–Ω–∏–π –¥—Ä–∞–∫–æ–Ω",
          description: "–°—Ä–∞–∑–∏—Å—å —Å –º–æ–≥—É—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–º –¥—Ä–∞–∫–æ–Ω–æ–º, —Ö—Ä–∞–Ω–∏—Ç–µ–ª–µ–º –¥—Ä–µ–≤–Ω–∏—Ö —Å–æ–∫—Ä–æ–≤–∏—â!",
          difficulty: 3,
          targetRolls: 5,
          successfulRolls: 0,
          requiredValue: 9,
          rewards: {
            xp: 50,
            stars: 100,
            crystals: 10,
            artifact: "–ö–æ—Ä–æ–Ω–∞ –≤–ª–∞—Å—Ç–∏"
          }
        };
      } else {
        // –°–ª–µ–¥—É—é—â–∞—è –æ–±—ã—á–Ω–∞—è –º–∏—Å—Å–∏—è
        gameState.currentMission = {
          title: "–¢–∞–π–Ω—ã —Ä—É–∏–Ω",
          description: "–ò—Å—Å–ª–µ–¥—É–π –¥—Ä–µ–≤–Ω–∏–µ —Ä—É–∏–Ω—ã –∏ —Ä–∞–∑–≥–∞–¥–∞–π –∏—Ö —Ç–∞–π–Ω—ã. –ß—Ç–æ —Å–∫—Ä—ã–≤–∞–µ—Ç—Å—è –≤ –≥–ª—É–±–∏–Ω–µ –≤–µ–∫–æ–≤?",
          difficulty: 2,
          targetRolls: 4,
          successfulRolls: 0,
          requiredValue: 8,
          rewards: {
            xp: 30,
            stars: 20,
            crystals: 5,
            artifact: "–ö–ª—é—á –æ—Ç —Å–æ–∫—Ä–æ–≤–∏—â–Ω–∏—Ü—ã"
          }
        };
      }
    } else {
      // –ï—Å–ª–∏ —ç—Ç–æ –±—ã–ª –ø–æ—Å–ª–µ–¥–Ω–∏–π —É–∑–µ–ª, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –Ω–æ–≤—É—é –ª–æ–∫–∞—Ü–∏—é
      // (—É–ø—Ä–æ—â–µ–Ω–Ω–æ –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞)
      resultDiv.textContent += " –õ–æ–∫–∞—Ü–∏—è '–¢—É–º–∞–Ω–Ω—ã–µ —Ä–∞–≤–Ω–∏–Ω—ã' –ø—Ä–æ–π–¥–µ–Ω–∞!";
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º UI
    setTimeout(() => {
      window.location.reload(); // –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ, –≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –Ω—É–∂–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å UI –±–µ–∑ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏
    }, 3000);
  }

  // –•—Ä–∞–Ω–∏—Ç —Ç–µ–∫—É—â–∏–µ –∞–Ω–∏–º–∞—Ü–∏–∏
  let currentAnimations = []; 

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É –±—Ä–æ—Å–∫–∞
  rollButton.addEventListener("click", () => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å –º–∏—Å—Å–∏—é
    if (gameState.currentMission.successfulRolls >= gameState.currentMission.targetRolls) {
      completeMission();
      return;
    }
    
    // –ë–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞ –≤—Ä–µ–º—è –∞–Ω–∏–º–∞—Ü–∏–∏
    rollButton.disabled = true;
    
    // –°–∫—Ä—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—É–±–∏–∫–∏
    resultDiv.style.display = "none";
    diceContainer.style.display = "flex";

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ —á–∏—Å–ª–∞ –¥–ª—è –æ–±–æ–∏—Ö –∫—É–±–∏–∫–æ–≤
    const randomRoll1 = Math.floor(Math.random() * 6) + 1;
    const randomRoll2 = Math.floor(Math.random() * 6) + 1;

    // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –∞–Ω–∏–º–∞—Ü–∏–∏
    currentAnimations.forEach(animation => animation.destroy());
    currentAnimations = [];

    // –°–æ–∑–¥–∞—ë–º –∞–Ω–∏–º–∞—Ü–∏–∏ –¥–ª—è –∫—É–±–∏–∫–æ–≤
    const animation1 = lottie.loadAnimation({
      container: dice1,
      renderer: "svg",
      loop: false,
      autoplay: true,
      path: `dice${randomRoll1}.json`
    });

    const animation2 = lottie.loadAnimation({
      container: dice2,
      renderer: "svg",
      loop: false,
      autoplay: true,
      path: `dice${randomRoll2}.json`
    });

    currentAnimations.push(animation1, animation2);

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–π
    let completedAnimations = 0;
    const onComplete = () => {
      completedAnimations++;
      if (completedAnimations === 2) {
        // –û—Ü–µ–Ω–∏–≤–∞–µ–º –±—Ä–æ—Å–æ–∫ –∏ –ø–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        const { points, message, missionSuccess } = evaluateRoll(randomRoll1, randomRoll2);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        updateUI();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        resultDiv.textContent = message;
        resultDiv.style.display = "block";
        
        // –ü–æ–¥—Å–≤–µ—Ç–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Å–ø–µ—Ö–∞ –º–∏—Å—Å–∏–∏
        if (missionSuccess) {
          resultDiv.classList.add("success-result");
          resultDiv.classList.remove("failure-result");
        } else {
          resultDiv.classList.add("failure-result");
          resultDiv.classList.remove("success-result");
        }
        
        // –ß–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è —Å–∫—Ä—ã–≤–∞–µ–º –∫—É–±–∏–∫–∏ –∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –±—Ä–æ—Å–∫–∞
        setTimeout(() => {
          diceContainer.style.display = "none";
          rollButton.disabled = false;
          
          // –£–¥–∞–ª—è–µ–º –∫–ª–∞—Å—Å—ã —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è
          setTimeout(() => {
            resultDiv.classList.remove("success-result", "failure-result");
          }, 1000);
        }, 2000);
      }
    };

    animation1.addEventListener("complete", onComplete);
    animation2.addEventListener("complete", onComplete);
  });

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
  updateUI();
});
